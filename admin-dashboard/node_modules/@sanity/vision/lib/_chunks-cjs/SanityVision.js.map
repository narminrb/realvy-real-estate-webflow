{"version":3,"file":"SanityVision.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/getBlobUrl.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\n\nexport const PERSPECTIVES = ['raw', 'previewDrafts', 'published'] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = PERSPECTIVES[0]\n\nexport function isPerspective(p: string): p is ClientPerspective {\n  return PERSPECTIVES.includes(p as ClientPerspective)\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {Badge, Button, Card, Inline, Popover, Stack, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import JSONInspector from '@rexxars/react-json-inspector'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown}) {\n  const {data} = props\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JSONInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport SplitPane from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type SanityClient,\n} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {type ChangeEvent, createRef, PureComponent, type RefObject} from 'react'\nimport {type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {DEFAULT_PERSPECTIVE, isPerspective, PERSPECTIVES} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: ClientPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement>\n  _queryEditorContainer: RefObject<HTMLDivElement>\n  _paramsEditorContainer: RefObject<HTMLDivElement>\n  _operationUrlElement: RefObject<HTMLInputElement>\n  _customApiVersionElement: RefObject<HTMLInputElement>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = PERSPECTIVES.includes(parts.options.perspective as ClientPerspective)\n      ? (parts.options.perspective as ClientPerspective)\n      : undefined\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split={'horizontal'}\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex, useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","jsx","Spinner","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","sanityTheme","useTheme","CodeMirror","PERSPECTIVES","DEFAULT_PERSPECTIVE","isPerspective","p","includes","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","Array","isArray","trim","isPlainObject","obj","prototype","toString","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","length","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","state","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","err","message","replace","validateApiVersion","apiVersion","parseableApiVersion","toUpperCase","test","isNaN","Date","defaultValue","ParamsEditor","onChange","useTranslation","visionLocaleNamespace","eventFromValue","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","parsedParams","Error","validationError","undefined","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonRef","useRef","popoverRef","Symbol","for","_temp","handleClick","current","useClickOutsideEvent","Text","Badge","jsxs","Inline","t8","t9","Card","t10","t11","t12","Stack","t13","Button","HelpCircleIcon","t14","Popover","o","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","css","lru","LRU","maxSize","ResultView","data","isRecord","JSONInspector","isExpanded","toggleExpanded","keyPath","cached","segments","split","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","Tooltip","SaveJsonButton","Root","Flex","displayName","Header","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","size","allowResize","minSize","Math","min","max","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","defaultPerspective","lastQuery","lastParams","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","isValidApiVersion","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","toast","push","closable","id","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","toLowerCase","focus","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","console","render","hasResult","jsonUrl","csvUrl","Grid","Select","map","ds","TextInput","CopyIcon","SplitPane","ErrorOutlineIcon","Hotkeys","StopIcon","PlayIcon","Translate","SaveResultButtons","Fragment","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","numRetries","getDerivedStateFromError","handleRetryRender","prev","handleRetryWithCacheClear","children","withCacheClear","Container","Heading","SanityVision","useClient","tool"],"mappings":"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"}