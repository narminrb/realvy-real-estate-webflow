{"version":3,"file":"generate-help-url.esm.mjs","sources":["../../src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","../../src/ui-components/button/Button.tsx","../../src/ui-components/dialog/Dialog.tsx","../../src/ui-components/errorBoundary/ErrorBoundary.tsx","../../src/ui-components/menuButton/MenuButton.tsx","../../src/ui-components/menuGroup/MenuGroup.tsx","../../src/core/components/Hotkeys.tsx","../../src/ui-components/menuItem/MenuItem.tsx","../../src/ui-components/popover/Popover.tsx","../../src/ui-components/tab/Tab.tsx","../../src/ui-components/tooltip/constants.ts","../../src/ui-components/tooltip/Tooltip.tsx","../../src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx","../../../../node_modules/.pnpm/@sanity+generate-help-url@3.0.0/node_modules/@sanity/generate-help-url/dist/generate-help-url.esm.js"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport {type ComponentProps, forwardRef, type HTMLProps, type ReactNode, type Ref} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<HTMLProps<HTMLDivElement>, 'onDragEnter' | 'onDrop'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                data-testid=\"cancel-button\"\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                data-testid=\"confirm-button\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","import {\n  // eslint-disable-next-line no-restricted-imports\n  ErrorBoundary as UIErrorBoundary,\n  type ErrorBoundaryProps as UIErrorBoundaryProps,\n} from '@sanity/ui'\nimport {useCallback, useContext} from 'react'\n\nimport {SourceContext} from '../../_singletons'\n\nexport type ErrorBoundaryProps = UIErrorBoundaryProps\n\n/**\n * ErrorBoundary component that catches errors and uses onUncaughtError config property\n * It also calls the onCatch prop if it exists.\n */\nexport function ErrorBoundary({onCatch, ...rest}: ErrorBoundaryProps): JSX.Element {\n  // Use context, because source could be undefined and we don't want to throw in that case\n  const source = useContext(SourceContext)\n\n  const handleCatch = useCallback(\n    ({error: caughtError, info: caughtInfo}: {error: Error; info: React.ErrorInfo}) => {\n      // Send the error to the source if it has an onUncaughtError method\n      source?.onUncaughtError?.(caughtError, caughtInfo)\n\n      // Call the onCatch prop if it exists\n      onCatch?.({error: caughtError, info: caughtInfo})\n    },\n    [source, onCatch],\n  )\n\n  return <UIErrorBoundary {...rest} onCatch={handleCatch} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport {type HTMLProps} from 'react'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex'>,\n) => {\n  return <UIMenuGroup {...props} fontSize={1} padding={3} />\n}\n","import {Hotkeys as UIHotkeys, type HotkeysProps as UIHotkeysProps} from '@sanity/ui'\nimport {type HTMLProps, type RefAttributes} from 'react'\n\n/**\n * Properties for the `Hotkeys` component.\n *\n * @public\n */\nexport type HotkeysProps = UIHotkeysProps & {\n  /**\n   * Whether to make the keys platform-aware (eg `alt` to `option` on Apple devices).\n   *\n   * @defaultValue true\n   */\n  makePlatformAware?: boolean\n} & Omit<HTMLProps<HTMLElement>, 'ref' | 'size' | 'as'> &\n  RefAttributes<HTMLElement>\n\n/**\n * Renders given `keys` as \"keycaps\" visually.\n *\n * This is a wrapper around `@sanity/ui`'s `Hotkeys` component, which allows for altering keys\n * (eg `alt` to `option`) on Apple devices unless `makePlatformAware` is set to `false`.\n *\n * @param props - Properties to render with\n * @returns React element\n * @public\n */\nexport function Hotkeys({makePlatformAware = true, keys: hotKeys = [], ...props}: HotkeysProps) {\n  const keys = makePlatformAware ? hotKeys.map(platformifyKey) : hotKeys\n  return <UIHotkeys {...props} keys={keys} />\n}\n\n/**\n * @internal\n */\nconst IS_APPLE_DEVICE =\n  typeof navigator === 'undefined' || typeof navigator.platform !== 'string'\n    ? false\n    : /Mac|iPod|iPhone|iPad/.test(navigator.platform || '')\n\n/**\n * Given key 'Alt', or 'Option' (case-insensitive), return the platform-appropriate key name\n * (eg 'Alt' on non-Apple devices, 'Option' on Apple devices).\n *\n * @param key - Key to platformify\n * @returns Platform-appropriate key name\n * @internal\n */\nfunction platformifyKey(key: string): string {\n  const lowerKey = key.toLowerCase()\n\n  if (lowerKey === 'alt' && IS_APPLE_DEVICE) {\n    return matchCase(key, 'option')\n  }\n\n  if (lowerKey === 'option' && !IS_APPLE_DEVICE) {\n    return matchCase(key, 'alt')\n  }\n\n  return key\n}\n\n/**\n * Apply the case (lowercase/uppercase) of `original` to `target`, character by character,\n * eg matching ALL CAPS, all lowercase or Mixed Case.\n *\n * @param original - The original string to match case of\n * @param target - The target string to apply case to\n * @returns Target string with case applied from original\n * @internal\n */\nfunction matchCase(original: string, target: string): string {\n  const orgLength = original.length\n\n  return target.replace(/./g, (char, i) => {\n    // Replace character by character matching case of original\n    // If running out of original, just return the target case as-is\n    return i < orgLength && original[i] === original[i].toUpperCase() ? char.toUpperCase() : char\n  })\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {\n  createElement,\n  forwardRef,\n  type HTMLProps,\n  isValidElement,\n  type JSX,\n  type ReactNode,\n  type Ref,\n  useCallback,\n  useMemo,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {styled} from 'styled-components'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: JSX.Element) => ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon,\n    iconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(icon) && icon}\n              {isValidElementType(icon) && createElement(icon)}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || iconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {iconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(iconRight) && iconRight}\n                {isValidElementType(iconRight) && createElement(iconRight)}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    iconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","import {\n  Box,\n  Flex,\n  type HotkeysProps,\n  Text,\n  // eslint-disable-next-line no-restricted-imports\n  Tooltip as UITooltip,\n  // eslint-disable-next-line no-restricted-imports\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\n\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n","const BASE_URL = \"https://docs.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nexport { generateHelpUrl };\n//# sourceMappingURL=generate-help-url.esm.js.map\n"],"names":["ConditionalWrapper","children","condition","wrapper","LARGE_BUTTON_PROPS","space","padding","DEFAULT_BUTTON_PROPS","TooltipButtonWrapper","styled","span","Button","forwardRef","t0","ref","$","_c","paddingY","rest","t1","t2","t3","tooltipProps","size","mode","tone","undefined","t4","content","renderWrapper","sizeProps","t5","t6","UIButton","t7","Dialog","bodyHeight","footer","props","t","useTranslation","confirmButton","cancelButton","onClose","UIDialog","ErrorBoundary","onCatch","source","useContext","SourceContext","error","caughtError","info","caughtInfo","onUncaughtError","handleCatch","UIErrorBoundary","MenuButton","popover","animate","UIMenuButton","MenuGroup","UIMenuGroup","Hotkeys","makePlatformAware","keys","hotKeys","map","platformifyKey","UIHotkeys","IS_APPLE_DEVICE","navigator","platform","test","key","lowerKey","toLowerCase","matchCase","original","target","orgLength","length","replace","char","i","toUpperCase","FONT_SIZE","SUBTITLE_FONT_SIZE","SubtitleText","Text","PreviewWrapper","Box","MenuItem","__unstable_space","__unstable_subtitle","badgeText","childrenProp","disabled","hotkeys","icon","iconRight","renderMenuItem","text","preview","opacity","isValidElement","isValidElementType","createElement","marginTop","marginBottom","menuItemContent","t8","t9","t10","t11","t12","t13","UIMenuItem","t14","Popover","UIPopover","Tab","UITab","TOOLTIP_DELAY_PROPS","open","TOOLTIP_SHARED_PROPS","arrow","boundaryElement","delay","fallbackPlacements","placement","portal","Tooltip","UITooltip","TooltipDelayGroupProvider","UITooltipDelayGroupProvider","BASE_URL","slug"],"mappings":"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","x_google_ignoreList":[13]}